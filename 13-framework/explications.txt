----------------
⚠️️ ARBORESCENCE
----------------

    app/    :   La configuration de notre application (infos de connexion BDD...)
    src/    :   Le code PHP et HTML spécifique à notre app (Notre code)
    vendor/ :   Coeur / Code général de l'app
    web/    :   Le répertoire web racine (index.php, img/, photo/, js/, css/, font/,... biblios FRONT)
                (= tt ce à quoi l'utlisateur aura accès depuis son navigateur)

        
---------------------------------
⚠️️ NATURE DES DIFFERENTS FICHIERS
---------------------------------

app/
    Config/
        parameters.php : 🔸 Contient ttes les infos de connexion à notre BDD 
                         et éventuellt d'autres paramètres de notre app.

    Config.php : Contient une classe dont l'objectif est de 🔸 récup les infos de connexion et 
                 de les "servir" à notre futur PDOManager qui fera la connexion à la BDD via PDO.


vendor/
    autoload.php :  Permet d'🔸 inclure les bons fichiers au bon moment (lors des instanciations) et nous 
                    permet d'🔸 éviter d'avoir à faire de nbrx require... Attention certains fichiers seront dans vendor/ et d'autres dans src/, notre autoload devra donc 🔸 savoir les distinguer...
                    Rq. autoload fait partie du 🔸 coeur du framework (ex : symfonie = déjà codé)


src/
    Entity/
        Produit.php     -       Membre.php      -      Commande.php
        Ces classes contiennent 🔸 ttes les propriétés des entités de notre appli (et les getter et setter).
        On les appelle des 🔸 POPO 🔸  (Plain Old PHP Object).
        On trv en objet => Il ns faut dc des classes, qui permettent de construire des objets pr chaq entité de notre site (⚠️️ = ce sont les plans de fabrication, nos moules !)


web/
    index.php   :   clé d'entrée de notre application (Symfony : app.php ou app_dev.php). 
                    C'est à partir de la que le site se déploie.
                    Dans notre application, c'est ici que l'on 🔸 crée la session, faisons le 🔸 require
                    de l'autoload et 🔸 instancierons la classe Application (interrupteur.)

vendor/
    Manager/
        PDOManager  : ⚠️️ Cette classe représente la connexion à la BDD. 
                      Elle contient et nous retourne notre 🔸 objet PDO grâce auquel ns pourrons effectuer des requêtes.
                      Cette classe est un 🔸 Singleton <=> il ne peut y avoir qu'un seul objet issu de cette classe.

    Model/
        Model.php   : Un model 🔸 centralise tout ce qui touche à la BDD (ttes les requêtes)
                      Concrètement il ne devrait pas y avoir de requête SQL en dehors de l'un de nos models.    
                      Dans ce fichier nous allons 🔸 coder les outils communs à ts nos models ainsi 
                      que les requêtes génériques.














⚠️️ NAMESPACE (Choix subjectifs)

- parameters, Config, index, autoload sont ds l'espace GLOBAL = pas dans namespaces :
    -> pas vraiment besoin, car +- immuables

- dans NAMESPACES : PDOManager, Commande, Membre, Produit



